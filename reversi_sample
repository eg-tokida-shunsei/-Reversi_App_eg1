<?php

#関数作成用 ひっくり返せる石をひっくり返す　

$field = array_fill(1, 64, 0);
$field[28] = $field[37] = 1;
$field[29] = $field[36] = -1;

#エラー条件
$field[17] = $field[18] = $field[19] = $field[20] = $field[21] = $field[25] = $field[26] = $field[27] = $field[28] = $field[29] = $field[30] = $field[34] = $field[36] = $field[37] = $field[43] = $field[44] = $field[12] = 1;
$field[9] = $field[35] = $field[41] = $field[42] = $field[51] = $field[58] = $field[59] = $field[60] =  -1;




#$push
$player = -1;
$number = 0;

reversi_view($field);

$octas = -8;

$push = 33;


  $field_log = $field;
  for ($X = 1; $X < 8; $X++) {

    //端に置いた時のみの処理を作る。
    if($push === 1 || $push === 2 || $push === 3 || $push === 4 || $push === 5 || $push === 6 || $push === 7 || $push === 8 || $push === 57 || $push === 58
    || $push === 59 || $push === 61 || $push === 62 || $push === 63 || $push === 64 || $push === 9 || $push === 17 || $push === 25 || $push === 33 || $push === 41
    || $push === 49 || $push === 16 || $push === 24 || $push === 32 || $push === 40 || $push === 48 || $push === 56){

      

    }else{

    if (
      $number === 1 || $number === 2 || $number === 3 || $number === 4 || $number === 5 || $number === 6 || $number === 7 || $number === 8 || $number === 57 || $number === 58
      || $number === 59 || $number === 61 || $number === 62 || $number === 63 || $number === 64 || $number === 9 || $number === 17 || $number === 25 || $number === 33 || $number === 41
      || $number === 49 || $number === 16 || $number === 24 || $number === 32 || $number === 40 || $number === 48 || $number === 56
    ) {
      if ($X === 7) {
        if ($field[$number] + $player === 0) {
          $field[$number] = $player;
          $number_array[] = $number;

          foreach ($number_array as $value) {
            $field[$value] = $field_log[$value];
          }
          break;
        } else {
          if ($field[$number] === $player) {
            $field[$push] = $player;
            break;
          } else {
            $number_array[] = $number;
            foreach ($number_array as $value) {
              $field[$value] = $field_log[$value];
            }
            break;
          }
        }
      } else {
        if ($field[$number] === $player) {
          $field[$push] = $player;
          break;
        } else {
          $number_array[] = $number;
          print_r($number_array);
          foreach ($number_array as $value) {
            $field[$value] = $field_log[$value];
          }
          break;
        }
      }
      #print($number);
      #print($push);
    } else {
      if ($X === 1) {
        $number = $push + $octas;
        // if ($number <= 0 || $number >= 65) {
        // break;　わかったわ。ここの処理が端取れてしまう問題発生させてる。
        // } else {
          if ($field[$number] + $player === 0) {
            $field[$number] = $player;
            $number_array = [$number];
            $number = $number + $octas;
            // if ($number <= 0 || $number >= 65) {
            //   break;
            // }
          } else {
            if ($field[$number] === $player) {
              $field[$push] = $player;
              break;
            } else {
              $number_array[] = $number;
              foreach ($number_array as $value) {
                $field[$value] = $field_log[$value];
              }
              // $X = 8;
              break;
            }
          }
        // }
      } else {

        #echo '$number:'.gettype($number) . "\n";
        $check = $field[$number + 1 * $X];
        #print_r($field[$number + 1 * $X]);
        if ($field[$number] + $player === 0) {
          $field[$number] = $player;
          $number_array[] = $number;
          $number = $number + $octas;
          // if ($number <= 0 || $number >= 65) {
          //   break;
          // }
        } else {
          if ($field[$number] === $player) {
            $field[$push] = $player;
            break;
          } else {
            $number_array[] = $number;
            foreach ($number_array as $value) {
              $field[$value] = $field_log[$value];
            }
            break;
          }
        }
      }
    }
  }

    echo "\n";
    echo $field[9];
    echo "\n";
    echo $field[17];
    echo "\n";
    echo $field[25];
    echo "\n";
    echo $field[33];
    echo "\n";
  }

  reversi_view($field);



#石表示プログラム

function reversi_view($field)
{
  foreach ($field as $key => $value) {
    $value = "$value";
  }

  $field_view = str_replace("-1", "○", $field);
  $field_view = str_replace("1", "●", $field_view);
  $field_view = str_replace("0", "□", $field_view);

  echo " " . "|" . "1" . "|" . "2" . "|" . "3" . "|" . "4" . "|" . "5" . "|" . "6" . "|" . "7" . "|" . "8" . "|" . " " . "\n";
  echo "1" . "|" . $field_view[1] . "|" . $field_view[2] . "|" . $field_view[3] . "|" . $field_view[4] . "|" . $field_view[5] . "|" . $field_view[6] . "|" . $field_view[7] . "|" . $field_view[8] . "|" . "1" . "\n";
  echo "2" . "|" . $field_view[9] . "|" . $field_view[10] . "|" . $field_view[11] . "|" . $field_view[12] . "|" . $field_view[13] . "|" . $field_view[14] . "|" . $field_view[15] . "|" . $field_view[16] . "|" . "2" . "\n";
  echo "3" . "|" . $field_view[17] . "|" . $field_view[18] . "|" . $field_view[19] . "|" . $field_view[20] . "|" . $field_view[21] . "|" . $field_view[22] . "|" . $field_view[23] . "|" . $field_view[24] . "|" . "3" . "\n";
  echo "4" . "|" . $field_view[25] . "|" . $field_view[26] . "|" . $field_view[27] . "|" . $field_view[28] . "|" . $field_view[29] . "|" . $field_view[30] . "|" . $field_view[31] . "|" . $field_view[32] . "|" . "4" . "\n";
  echo "5" . "|" . $field_view[33] . "|" . $field_view[34] . "|" . $field_view[35] . "|" . $field_view[36] . "|" . $field_view[37] . "|" . $field_view[38] . "|" . $field_view[39] . "|" . $field_view[40] . "|" . "5" . "\n";
  echo "6" . "|" . $field_view[41] . "|" . $field_view[42] . "|" . $field_view[43] . "|" . $field_view[44] . "|" . $field_view[45] . "|" . $field_view[46] . "|" . $field_view[47] . "|" . $field_view[48] . "|" . "6" . "\n";
  echo "7" . "|" . $field_view[49] . "|" . $field_view[50] . "|" . $field_view[51] . "|" . $field_view[52] . "|" . $field_view[53] . "|" . $field_view[54] . "|" . $field_view[55] . "|" . $field_view[56] . "|" . "7" . "\n";
  echo "8" . "|" . $field_view[57] . "|" . $field_view[58] . "|" . $field_view[59] . "|" . $field_view[60] . "|" . $field_view[61] . "|" . $field_view[62] . "|" . $field_view[63] . "|" . $field_view[64] . "|" . "8" . "\n";
  echo " " . "|" . "1" . "|" . "2" . "|" . "3" . "|" . "4" . "|" . "5" . "|" . "6" . "|" . "7" . "|" . "8" . "|" . " " . "\n";
}

// echo "\n";
// echo $field[28];
// echo $field[36];
// echo $field[44];


#8方位を探す作業
// $octas_array = [-9, -8, -7, -1, 1, 7, 8, 9];
// foreach ($octas_array as $octas) {
//   reversi_stone($field, $number, $player, $push, $octas);
// }


#なるほど。本当なら、探索をやめる。numberのif部分も関数にできたのか。
