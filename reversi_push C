<?php

#プレイヤーが石を置くプログラム。隣に石がないときと、となりが同じ石の時置けない処理、既に置いてあるところに置けない処理はする。
#また、置けたとしても、石がとれなかったら、もう一度やってもらう処理。
#置けなくなったら自動スキップでなく、パスしてもらう。パス機能。

$field = array_fill(1, 64, 0);


#初期値設定
$field[28] = $field[37] = 1;
$field[29] = $field[36] = -1;

foreach($field as $key => $value){
  $value = "$value";
}

$field_view = str_replace("-1", "●", $field);
$field_view = str_replace("1", "○", $field_view);
$field_view = str_replace("0", "□", $field_view);

$a = 1;

for ($y = 0; $y < 8; $y++) {
  for ($x = 0; $x < 8; $x++) {
    $field_sql[$x][$y] = $field_view[$a];
    $a = $a + 1;
  }
}


#置換用の表

for ($i=1; $i<=64; ++$i) {
  $field_rep[] =$i;
}

$b = 0;

for ($x = 1; $x < 9; $x++) {
  for ($y = 1; $y < 9; $y++) {
    $replace[$x][$y] = $field_rep[$b];
    $b = $b + 1;
  }
}

#colとrowを指定してもらうようにする

// print("縦列：");
$col = fgets(STDIN);
// print("横列：");
$row = fgets(STDIN);

var_dump($col);
var_dump($row);

$col_int = intval($col);
$row_int = intval($row);

var_dump($col_int);
var_dump($row_int);
echo '<br/>';

echo $col_int;
echo '<br/>';

echo $row_int;
echo '<br/>';

print($col_int);
echo '<br/>';

print($row_int);
echo '<br/>';

// $col = 2;
// $row = 5;

//print_r($replace);

//$push = $replace[$col][$row];

//echo $push;
